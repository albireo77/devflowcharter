{ lexical analyzer template (TP Lex V3.0), V1.0 3-2-91 AG		}

{ 24.3.98: repacked into an class to make code thread-safe.		}

{ Modified September 2000 by C.P.Osborne for Delphi 4/5			}

{	11/09/2000	CPO	Mods started.				}

{				Converted for new LexLib, YaccLib.	}



{ global definitions: 							}


const INITIAL = 0;



function TLex.yylex(var yylval: YYSType): Integer;



procedure yyaction ( yyruleno : Integer );



{ local definitions:							}


begin

  { actions: 								}

  case yyruleno of

  1:
          		        ; // ignore spaces

  2:
            		return(T_SIN);

  3:
            		return(T_COS);

  4:
            		return(T_TAN);

  5:
                    	return(T_COTAN);

  6:
        		return(T_LN);

  7:
            		return(T_EXP);

  8:
            		return(T_SQR); 	

  9:
                        	return(T_RAND);

  10:
                    	return(T_TRUNC);

  11:
                            	return(T_WRITELN);
                              
  12:
                        	return(T_READLN);

  13:
                    	return(T_WRITE);

  14:
                	return(T_READ);

  15:
            		return(T_NOT);

  16:
        		return(T_OR);

  17:
            		return(T_AND);

  18:
            		return(T_ABS);

  19:
                        	return(T_LEN);

  20:
                	return(T_SQRT);

  21:
            		return(T_DIV);

  22:
            		return(T_ORD);

  23:
            		return(T_CHR);

  24:
            		return(T_MOD);

  25:
                    	return(T_BREAK);

  26:
                                	return(T_CONTINUE);

  27:
                	return(T_EXIT);

  28:
                        	return(T_ASSIGN);

  29:
                    	return(T_RESET);

  30:
                            	return(T_REWRITE);

  31:
                        	return(T_APPEND);

  32:
                    	return(T_CLOSE);

  33:
            		return(T_EOF);

  34:
                	return(T_EOLN);

  35:
        		begin
				yylval.yyString := yytext;
				return(T_PI);
			end;

  36:
                            	return(T_DISPOSE);

  37:
            		return(T_NEW);

  38:
            		return(T_NIL);

  39:
                	return(L_BOOL);

  40:
                    	return(L_BOOL);

  41:
    			begin
				yylval.yyInteger := StrToInt(yytext);
				return(L_INT);
			end;

  42:
                             	return(L_REAL);

  43:
               		return(L_HEX);

  44:
                      	begin
				yylval.yyString := yytext;
				return(T_IDENTIFIER);
			end;
                                    
  45:
            		begin                             
				yylval.yyString := yytext;
				return(T_STRING);
			end;

  46:
                       	returnc(yytext[1]);
                           
  47:
    			return(T_ASSIGN_SIGN);

  48:
    			return(T_DBLDOT);
                                                               
  49:
    			return(GL);
                                                             
  50:
  			return(GE);
                                                            
  51:
   			return(LE);
                              
  52:
   			return(NE);
                              
  53:
 			return(ILLEGAL);
                             

  end;

end;	{ yyaction	}



{ DFA table: 								}


type YYTRec = record
                cc : set of Char;
                s  : Integer;
              end;

const

yynmarks   = 208;
yynmatches = 208;
yyntrans   = 307;
yynstates  = 150;

yyk : array [1..yynmarks] of Integer = (
  { 0: }
  { 1: }
  { 2: }
  1,
  53,
  { 3: }
  44,
  53,
  { 4: }
  44,
  53,
  { 5: }
  44,
  53,
  { 6: }
  44,
  53,
  { 7: }
  44,
  53,
  { 8: }
  44,
  53,
  { 9: }
  44,
  53,
  { 10: }
  44,
  53,
  { 11: }
  44,
  53,
  { 12: }
  44,
  53,
  { 13: }
  44,
  53,
  { 14: }
  44,
  53,
  { 15: }
  44,
  53,
  { 16: }
  44,
  53,
  { 17: }
  44,
  53,
  { 18: }
  41,
  42,
  53,
  { 19: }
  53,
  { 20: }
  44,
  53,
  { 21: }
  53,
  { 22: }
  46,
  53,
  { 23: }
  46,
  53,
  { 24: }
  46,
  53,
  { 25: }
  49,
  53,
  { 26: }
  49,
  53,
  { 27: }
  53,
  { 28: }
  44,
  { 29: }
  44,
  { 30: }
  44,
  { 31: }
  44,
  { 32: }
  44,
  { 33: }
  44,
  { 34: }
  44,
  { 35: }
  44,
  { 36: }
  6,
  44,
  { 37: }
  44,
  { 38: }
  44,
  { 39: }
  44,
  { 40: }
  44,
  { 41: }
  44,
  { 42: }
  44,
  { 43: }
  44,
  { 44: }
  44,
  { 45: }
  44,
  { 46: }
  16,
  44,
  { 47: }
  44,
  { 48: }
  44,
  { 49: }
  44,
  { 50: }
  44,
  { 51: }
  44,
  { 52: }
  44,
  { 53: }
  44,
  { 54: }
  35,
  44,
  { 55: }
  44,
  { 56: }
  41,
  42,
  { 57: }
  { 58: }
  { 59: }
  43,
  { 60: }
  { 61: }
  45,
  { 62: }
  47,
  { 63: }
  48,
  { 64: }
  51,
  { 65: }
  52,
  { 66: }
  50,
  { 67: }
  2,
  44,
  { 68: }
  8,
  44,
  { 69: }
  3,
  44,
  { 70: }
  44,
  { 71: }
  44,
  { 72: }
  23,
  44,
  { 73: }
  44,
  { 74: }
  4,
  44,
  { 75: }
  44,
  { 76: }
  44,
  { 77: }
  7,
  44,
  { 78: }
  44,
  { 79: }
  33,
  44,
  { 80: }
  44,
  { 81: }
  44,
  { 82: }
  44,
  { 83: }
  44,
  { 84: }
  44,
  { 85: }
  44,
  { 86: }
  15,
  44,
  { 87: }
  37,
  44,
  { 88: }
  38,
  44,
  { 89: }
  22,
  44,
  { 90: }
  17,
  44,
  { 91: }
  18,
  44,
  { 92: }
  44,
  { 93: }
  44,
  { 94: }
  21,
  44,
  { 95: }
  44,
  { 96: }
  24,
  44,
  { 97: }
  44,
  { 98: }
  44,
  { 99: }
  42,
  { 100: }
  { 101: }
  42,
  { 102: }
  20,
  44,
  { 103: }
  44,
  { 104: }
  44,
  { 105: }
  44,
  { 106: }
  44,
  { 107: }
  39,
  44,
  { 108: }
  44,
  { 109: }
  27,
  44,
  { 110: }
  34,
  44,
  { 111: }
  44,
  { 112: }
  14,
  44,
  { 113: }
  44,
  { 114: }
  44,
  { 115: }
  44,
  { 116: }
  44,
  { 117: }
  44,
  { 118: }
  44,
  { 119: }
  44,
  { 120: }
  44,
  { 121: }
  5,
  44,
  { 122: }
  44,
  { 123: }
  32,
  44,
  { 124: }
  10,
  44,
  { 125: }
  44,
  { 126: }
  44,
  { 127: }
  44,
  { 128: }
  29,
  44,
  { 129: }
  44,
  { 130: }
  13,
  44,
  { 131: }
  44,
  { 132: }
  44,
  { 133: }
  44,
  { 134: }
  25,
  44,
  { 135: }
  40,
  44,
  { 136: }
  44,
  { 137: }
  19,
  44,
  { 138: }
  9,
  44,
  { 139: }
  12,
  44,
  { 140: }
  44,
  { 141: }
  44,
  { 142: }
  28,
  44,
  { 143: }
  31,
  44,
  { 144: }
  44,
  { 145: }
  44,
  { 146: }
  30,
  44,
  { 147: }
  11,
  44,
  { 148: }
  36,
  44,
  { 149: }
  26,
  44
);

yym : array [1..yynmatches] of Integer = (
{ 0: }
{ 1: }
{ 2: }
  1,
  53,
{ 3: }
  44,
  53,
{ 4: }
  44,
  53,
{ 5: }
  44,
  53,
{ 6: }
  44,
  53,
{ 7: }
  44,
  53,
{ 8: }
  44,
  53,
{ 9: }
  44,
  53,
{ 10: }
  44,
  53,
{ 11: }
  44,
  53,
{ 12: }
  44,
  53,
{ 13: }
  44,
  53,
{ 14: }
  44,
  53,
{ 15: }
  44,
  53,
{ 16: }
  44,
  53,
{ 17: }
  44,
  53,
{ 18: }
  41,
  42,
  53,
{ 19: }
  53,
{ 20: }
  44,
  53,
{ 21: }
  53,
{ 22: }
  46,
  53,
{ 23: }
  46,
  53,
{ 24: }
  46,
  53,
{ 25: }
  49,
  53,
{ 26: }
  49,
  53,
{ 27: }
  53,
{ 28: }
  44,
{ 29: }
  44,
{ 30: }
  44,
{ 31: }
  44,
{ 32: }
  44,
{ 33: }
  44,
{ 34: }
  44,
{ 35: }
  44,
{ 36: }
  6,
  44,
{ 37: }
  44,
{ 38: }
  44,
{ 39: }
  44,
{ 40: }
  44,
{ 41: }
  44,
{ 42: }
  44,
{ 43: }
  44,
{ 44: }
  44,
{ 45: }
  44,
{ 46: }
  16,
  44,
{ 47: }
  44,
{ 48: }
  44,
{ 49: }
  44,
{ 50: }
  44,
{ 51: }
  44,
{ 52: }
  44,
{ 53: }
  44,
{ 54: }
  35,
  44,
{ 55: }
  44,
{ 56: }
  41,
  42,
{ 57: }
{ 58: }
{ 59: }
  43,
{ 60: }
{ 61: }
  45,
{ 62: }
  47,
{ 63: }
  48,
{ 64: }
  51,
{ 65: }
  52,
{ 66: }
  50,
{ 67: }
  2,
  44,
{ 68: }
  8,
  44,
{ 69: }
  3,
  44,
{ 70: }
  44,
{ 71: }
  44,
{ 72: }
  23,
  44,
{ 73: }
  44,
{ 74: }
  4,
  44,
{ 75: }
  44,
{ 76: }
  44,
{ 77: }
  7,
  44,
{ 78: }
  44,
{ 79: }
  33,
  44,
{ 80: }
  44,
{ 81: }
  44,
{ 82: }
  44,
{ 83: }
  44,
{ 84: }
  44,
{ 85: }
  44,
{ 86: }
  15,
  44,
{ 87: }
  37,
  44,
{ 88: }
  38,
  44,
{ 89: }
  22,
  44,
{ 90: }
  17,
  44,
{ 91: }
  18,
  44,
{ 92: }
  44,
{ 93: }
  44,
{ 94: }
  21,
  44,
{ 95: }
  44,
{ 96: }
  24,
  44,
{ 97: }
  44,
{ 98: }
  44,
{ 99: }
  42,
{ 100: }
{ 101: }
  42,
{ 102: }
  20,
  44,
{ 103: }
  44,
{ 104: }
  44,
{ 105: }
  44,
{ 106: }
  44,
{ 107: }
  39,
  44,
{ 108: }
  44,
{ 109: }
  27,
  44,
{ 110: }
  34,
  44,
{ 111: }
  44,
{ 112: }
  14,
  44,
{ 113: }
  44,
{ 114: }
  44,
{ 115: }
  44,
{ 116: }
  44,
{ 117: }
  44,
{ 118: }
  44,
{ 119: }
  44,
{ 120: }
  44,
{ 121: }
  5,
  44,
{ 122: }
  44,
{ 123: }
  32,
  44,
{ 124: }
  10,
  44,
{ 125: }
  44,
{ 126: }
  44,
{ 127: }
  44,
{ 128: }
  29,
  44,
{ 129: }
  44,
{ 130: }
  13,
  44,
{ 131: }
  44,
{ 132: }
  44,
{ 133: }
  44,
{ 134: }
  25,
  44,
{ 135: }
  40,
  44,
{ 136: }
  44,
{ 137: }
  19,
  44,
{ 138: }
  9,
  44,
{ 139: }
  12,
  44,
{ 140: }
  44,
{ 141: }
  44,
{ 142: }
  28,
  44,
{ 143: }
  31,
  44,
{ 144: }
  44,
{ 145: }
  44,
{ 146: }
  30,
  44,
{ 147: }
  11,
  44,
{ 148: }
  36,
  44,
{ 149: }
  26,
  44
);

yyt : array [1..yyntrans] of YYTrec = (
{ 0: }
  ( cc: [ #1..#9,#11..#31,'!'..'#','%','&','?','\',
            '`','{'..#255 ]; s: 27),
  ( cc: [ ' ' ]; s: 2),
  ( cc: [ '$' ]; s: 19),
  ( cc: [ '''' ]; s: 21),
  ( cc: [ '('..'-','/',';','=','@','[',']','^' ]; s: 22),
  ( cc: [ '.' ]; s: 24),
  ( cc: [ '0'..'9' ]; s: 18),
  ( cc: [ ':' ]; s: 23),
  ( cc: [ '<' ]; s: 25),
  ( cc: [ '>' ]; s: 26),
  ( cc: [ 'A','a' ]; s: 12),
  ( cc: [ 'B','b' ]; s: 15),
  ( cc: [ 'C','c' ]; s: 4),
  ( cc: [ 'D','d' ]; s: 13),
  ( cc: [ 'E','e' ]; s: 7),
  ( cc: [ 'F','f' ]; s: 17),
  ( cc: [ 'G'..'K','Q','U','V','X'..'Z','_','g'..'k',
            'q','u','v','x'..'z' ]; s: 20),
  ( cc: [ 'L','l' ]; s: 6),
  ( cc: [ 'M','m' ]; s: 14),
  ( cc: [ 'N','n' ]; s: 10),
  ( cc: [ 'O','o' ]; s: 11),
  ( cc: [ 'P','p' ]; s: 16),
  ( cc: [ 'R','r' ]; s: 8),
  ( cc: [ 'S','s' ]; s: 3),
  ( cc: [ 'T','t' ]; s: 5),
  ( cc: [ 'W','w' ]; s: 9),
{ 1: }
  ( cc: [ #1..#9,#11..#31,'!'..'#','%','&','?','\',
            '`','{'..#255 ]; s: 27),
  ( cc: [ ' ' ]; s: 2),
  ( cc: [ '$' ]; s: 19),
  ( cc: [ '''' ]; s: 21),
  ( cc: [ '('..'-','/',';','=','@','[',']','^' ]; s: 22),
  ( cc: [ '.' ]; s: 24),
  ( cc: [ '0'..'9' ]; s: 18),
  ( cc: [ ':' ]; s: 23),
  ( cc: [ '<' ]; s: 25),
  ( cc: [ '>' ]; s: 26),
  ( cc: [ 'A','a' ]; s: 12),
  ( cc: [ 'B','b' ]; s: 15),
  ( cc: [ 'C','c' ]; s: 4),
  ( cc: [ 'D','d' ]; s: 13),
  ( cc: [ 'E','e' ]; s: 7),
  ( cc: [ 'F','f' ]; s: 17),
  ( cc: [ 'G'..'K','Q','U','V','X'..'Z','_','g'..'k',
            'q','u','v','x'..'z' ]; s: 20),
  ( cc: [ 'L','l' ]; s: 6),
  ( cc: [ 'M','m' ]; s: 14),
  ( cc: [ 'N','n' ]; s: 10),
  ( cc: [ 'O','o' ]; s: 11),
  ( cc: [ 'P','p' ]; s: 16),
  ( cc: [ 'R','r' ]; s: 8),
  ( cc: [ 'S','s' ]; s: 3),
  ( cc: [ 'T','t' ]; s: 5),
  ( cc: [ 'W','w' ]; s: 9),
{ 2: }
{ 3: }
  ( cc: [ '0'..'9','A'..'H','J'..'P','R'..'Z','_','a'..'h',
            'j'..'p','r'..'z' ]; s: 30),
  ( cc: [ 'I','i' ]; s: 28),
  ( cc: [ 'Q','q' ]; s: 29),
{ 4: }
  ( cc: [ '0'..'9','A'..'G','I'..'K','M','N','P'..'Z',
            '_','a'..'g','i'..'k','m','n','p'..'z' ]; s: 30),
  ( cc: [ 'H','h' ]; s: 32),
  ( cc: [ 'L','l' ]; s: 33),
  ( cc: [ 'O','o' ]; s: 31),
{ 5: }
  ( cc: [ '0'..'9','B'..'Q','S'..'Z','_','b'..'q','s'..'z' ]; s: 30),
  ( cc: [ 'A','a' ]; s: 34),
  ( cc: [ 'R','r' ]; s: 35),
{ 6: }
  ( cc: [ '0'..'9','A'..'D','F'..'M','O'..'Z','_','a'..'d',
            'f'..'m','o'..'z' ]; s: 30),
  ( cc: [ 'E','e' ]; s: 37),
  ( cc: [ 'N','n' ]; s: 36),
{ 7: }
  ( cc: [ '0'..'9','A'..'N','P'..'W','Y','Z','_','a'..'n',
            'p'..'w','y','z' ]; s: 30),
  ( cc: [ 'O','o' ]; s: 39),
  ( cc: [ 'X','x' ]; s: 38),
{ 8: }
  ( cc: [ '0'..'9','B'..'D','F'..'Z','_','b'..'d','f'..'z' ]; s: 30),
  ( cc: [ 'A','a' ]; s: 40),
  ( cc: [ 'E','e' ]; s: 41),
{ 9: }
  ( cc: [ '0'..'9','A'..'Q','S'..'Z','_','a'..'q','s'..'z' ]; s: 30),
  ( cc: [ 'R','r' ]; s: 42),
{ 10: }
  ( cc: [ '0'..'9','A'..'D','F'..'H','J'..'N','P'..'Z',
            '_','a'..'d','f'..'h','j'..'n','p'..'z' ]; s: 30),
  ( cc: [ 'E','e' ]; s: 44),
  ( cc: [ 'I','i' ]; s: 45),
  ( cc: [ 'O','o' ]; s: 43),
{ 11: }
  ( cc: [ '0'..'9','A'..'Q','S'..'Z','_','a'..'q','s'..'z' ]; s: 30),
  ( cc: [ 'R','r' ]; s: 46),
{ 12: }
  ( cc: [ '0'..'9','A','C'..'M','O','Q','R','T'..'Z',
            '_','a','c'..'m','o','q','r','t'..'z' ]; s: 30),
  ( cc: [ 'B','b' ]; s: 48),
  ( cc: [ 'N','n' ]; s: 47),
  ( cc: [ 'P','p' ]; s: 50),
  ( cc: [ 'S','s' ]; s: 49),
{ 13: }
  ( cc: [ '0'..'9','A'..'H','J'..'Z','_','a'..'h','j'..'z' ]; s: 30),
  ( cc: [ 'I','i' ]; s: 51),
{ 14: }
  ( cc: [ '0'..'9','A'..'N','P'..'Z','_','a'..'n','p'..'z' ]; s: 30),
  ( cc: [ 'O','o' ]; s: 52),
{ 15: }
  ( cc: [ '0'..'9','A'..'Q','S'..'Z','_','a'..'q','s'..'z' ]; s: 30),
  ( cc: [ 'R','r' ]; s: 53),
{ 16: }
  ( cc: [ '0'..'9','A'..'H','J'..'Z','_','a'..'h','j'..'z' ]; s: 30),
  ( cc: [ 'I','i' ]; s: 54),
{ 17: }
  ( cc: [ '0'..'9','B'..'Z','_','b'..'z' ]; s: 30),
  ( cc: [ 'A','a' ]; s: 55),
{ 18: }
  ( cc: [ '.' ]; s: 57),
  ( cc: [ '0'..'9' ]; s: 56),
  ( cc: [ 'E','e' ]; s: 58),
{ 19: }
  ( cc: [ '0'..'9','A'..'F','a'..'f' ]; s: 59),
{ 20: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 30),
{ 21: }
  ( cc: [ #1..'&','('..#255 ]; s: 60),
  ( cc: [ '''' ]; s: 61),
{ 22: }
{ 23: }
  ( cc: [ '=' ]; s: 62),
{ 24: }
  ( cc: [ '.' ]; s: 63),
{ 25: }
  ( cc: [ '=' ]; s: 64),
  ( cc: [ '>' ]; s: 65),
{ 26: }
  ( cc: [ '=' ]; s: 66),
{ 27: }
{ 28: }
  ( cc: [ '0'..'9','A'..'M','O'..'Z','_','a'..'m','o'..'z' ]; s: 30),
  ( cc: [ 'N','n' ]; s: 67),
{ 29: }
  ( cc: [ '0'..'9','A'..'Q','S'..'Z','_','a'..'q','s'..'z' ]; s: 30),
  ( cc: [ 'R','r' ]; s: 68),
{ 30: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 30),
{ 31: }
  ( cc: [ '0'..'9','A'..'M','O'..'R','U'..'Z','_','a'..'m',
            'o'..'r','u'..'z' ]; s: 30),
  ( cc: [ 'N','n' ]; s: 71),
  ( cc: [ 'S','s' ]; s: 69),
  ( cc: [ 'T','t' ]; s: 70),
{ 32: }
  ( cc: [ '0'..'9','A'..'Q','S'..'Z','_','a'..'q','s'..'z' ]; s: 30),
  ( cc: [ 'R','r' ]; s: 72),
{ 33: }
  ( cc: [ '0'..'9','A'..'N','P'..'Z','_','a'..'n','p'..'z' ]; s: 30),
  ( cc: [ 'O','o' ]; s: 73),
{ 34: }
  ( cc: [ '0'..'9','A'..'M','O'..'Z','_','a'..'m','o'..'z' ]; s: 30),
  ( cc: [ 'N','n' ]; s: 74),
{ 35: }
  ( cc: [ '0'..'9','A'..'T','V'..'Z','_','a'..'t','v'..'z' ]; s: 30),
  ( cc: [ 'U','u' ]; s: 75),
{ 36: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 30),
{ 37: }
  ( cc: [ '0'..'9','A'..'M','O'..'Z','_','a'..'m','o'..'z' ]; s: 30),
  ( cc: [ 'N','n' ]; s: 76),
{ 38: }
  ( cc: [ '0'..'9','A'..'H','J'..'O','Q'..'Z','_','a'..'h',
            'j'..'o','q'..'z' ]; s: 30),
  ( cc: [ 'I','i' ]; s: 78),
  ( cc: [ 'P','p' ]; s: 77),
{ 39: }
  ( cc: [ '0'..'9','A'..'E','G'..'K','M'..'Z','_','a'..'e',
            'g'..'k','m'..'z' ]; s: 30),
  ( cc: [ 'F','f' ]; s: 79),
  ( cc: [ 'L','l' ]; s: 80),
{ 40: }
  ( cc: [ '0'..'9','A'..'M','O'..'Z','_','a'..'m','o'..'z' ]; s: 30),
  ( cc: [ 'N','n' ]; s: 81),
{ 41: }
  ( cc: [ '0'..'9','B'..'R','T'..'V','X'..'Z','_','b'..'r',
            't'..'v','x'..'z' ]; s: 30),
  ( cc: [ 'A','a' ]; s: 82),
  ( cc: [ 'S','s' ]; s: 83),
  ( cc: [ 'W','w' ]; s: 84),
{ 42: }
  ( cc: [ '0'..'9','A'..'H','J'..'Z','_','a'..'h','j'..'z' ]; s: 30),
  ( cc: [ 'I','i' ]; s: 85),
{ 43: }
  ( cc: [ '0'..'9','A'..'S','U'..'Z','_','a'..'s','u'..'z' ]; s: 30),
  ( cc: [ 'T','t' ]; s: 86),
{ 44: }
  ( cc: [ '0'..'9','A'..'V','X'..'Z','_','a'..'v','x'..'z' ]; s: 30),
  ( cc: [ 'W','w' ]; s: 87),
{ 45: }
  ( cc: [ '0'..'9','A'..'K','M'..'Z','_','a'..'k','m'..'z' ]; s: 30),
  ( cc: [ 'L','l' ]; s: 88),
{ 46: }
  ( cc: [ '0'..'9','A'..'C','E'..'Z','_','a'..'c','e'..'z' ]; s: 30),
  ( cc: [ 'D','d' ]; s: 89),
{ 47: }
  ( cc: [ '0'..'9','A'..'C','E'..'Z','_','a'..'c','e'..'z' ]; s: 30),
  ( cc: [ 'D','d' ]; s: 90),
{ 48: }
  ( cc: [ '0'..'9','A'..'R','T'..'Z','_','a'..'r','t'..'z' ]; s: 30),
  ( cc: [ 'S','s' ]; s: 91),
{ 49: }
  ( cc: [ '0'..'9','A'..'R','T'..'Z','_','a'..'r','t'..'z' ]; s: 30),
  ( cc: [ 'S','s' ]; s: 92),
{ 50: }
  ( cc: [ '0'..'9','A'..'O','Q'..'Z','_','a'..'o','q'..'z' ]; s: 30),
  ( cc: [ 'P','p' ]; s: 93),
{ 51: }
  ( cc: [ '0'..'9','A'..'R','T','U','W'..'Z','_','a'..'r',
            't','u','w'..'z' ]; s: 30),
  ( cc: [ 'S','s' ]; s: 95),
  ( cc: [ 'V','v' ]; s: 94),
{ 52: }
  ( cc: [ '0'..'9','A'..'C','E'..'Z','_','a'..'c','e'..'z' ]; s: 30),
  ( cc: [ 'D','d' ]; s: 96),
{ 53: }
  ( cc: [ '0'..'9','A'..'D','F'..'Z','_','a'..'d','f'..'z' ]; s: 30),
  ( cc: [ 'E','e' ]; s: 97),
{ 54: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 30),
{ 55: }
  ( cc: [ '0'..'9','A'..'K','M'..'Z','_','a'..'k','m'..'z' ]; s: 30),
  ( cc: [ 'L','l' ]; s: 98),
{ 56: }
  ( cc: [ '.' ]; s: 57),
  ( cc: [ '0'..'9' ]; s: 56),
  ( cc: [ 'E','e' ]; s: 58),
{ 57: }
  ( cc: [ '0'..'9' ]; s: 99),
{ 58: }
  ( cc: [ '+','-' ]; s: 100),
  ( cc: [ '0'..'9' ]; s: 101),
{ 59: }
  ( cc: [ '0'..'9','A'..'F','a'..'f' ]; s: 59),
{ 60: }
  ( cc: [ #1..'&','('..#255 ]; s: 60),
  ( cc: [ '''' ]; s: 61),
{ 61: }
{ 62: }
{ 63: }
{ 64: }
{ 65: }
{ 66: }
{ 67: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 30),
{ 68: }
  ( cc: [ '0'..'9','A'..'S','U'..'Z','_','a'..'s','u'..'z' ]; s: 30),
  ( cc: [ 'T','t' ]; s: 102),
{ 69: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 30),
{ 70: }
  ( cc: [ '0'..'9','B'..'Z','_','b'..'z' ]; s: 30),
  ( cc: [ 'A','a' ]; s: 103),
{ 71: }
  ( cc: [ '0'..'9','A'..'S','U'..'Z','_','a'..'s','u'..'z' ]; s: 30),
  ( cc: [ 'T','t' ]; s: 104),
{ 72: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 30),
{ 73: }
  ( cc: [ '0'..'9','A'..'R','T'..'Z','_','a'..'r','t'..'z' ]; s: 30),
  ( cc: [ 'S','s' ]; s: 105),
{ 74: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 30),
{ 75: }
  ( cc: [ '0'..'9','A'..'D','F'..'M','O'..'Z','_','a'..'d',
            'f'..'m','o'..'z' ]; s: 30),
  ( cc: [ 'E','e' ]; s: 107),
  ( cc: [ 'N','n' ]; s: 106),
{ 76: }
  ( cc: [ '0'..'9','A'..'F','H'..'Z','_','a'..'f','h'..'z' ]; s: 30),
  ( cc: [ 'G','g' ]; s: 108),
{ 77: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 30),
{ 78: }
  ( cc: [ '0'..'9','A'..'S','U'..'Z','_','a'..'s','u'..'z' ]; s: 30),
  ( cc: [ 'T','t' ]; s: 109),
{ 79: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 30),
{ 80: }
  ( cc: [ '0'..'9','A'..'M','O'..'Z','_','a'..'m','o'..'z' ]; s: 30),
  ( cc: [ 'N','n' ]; s: 110),
{ 81: }
  ( cc: [ '0'..'9','A'..'C','E'..'Z','_','a'..'c','e'..'z' ]; s: 30),
  ( cc: [ 'D','d' ]; s: 111),
{ 82: }
  ( cc: [ '0'..'9','A'..'C','E'..'Z','_','a'..'c','e'..'z' ]; s: 30),
  ( cc: [ 'D','d' ]; s: 112),
{ 83: }
  ( cc: [ '0'..'9','A'..'D','F'..'Z','_','a'..'d','f'..'z' ]; s: 30),
  ( cc: [ 'E','e' ]; s: 113),
{ 84: }
  ( cc: [ '0'..'9','A'..'Q','S'..'Z','_','a'..'q','s'..'z' ]; s: 30),
  ( cc: [ 'R','r' ]; s: 114),
{ 85: }
  ( cc: [ '0'..'9','A'..'S','U'..'Z','_','a'..'s','u'..'z' ]; s: 30),
  ( cc: [ 'T','t' ]; s: 115),
{ 86: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 30),
{ 87: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 30),
{ 88: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 30),
{ 89: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 30),
{ 90: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 30),
{ 91: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 30),
{ 92: }
  ( cc: [ '0'..'9','A'..'H','J'..'Z','_','a'..'h','j'..'z' ]; s: 30),
  ( cc: [ 'I','i' ]; s: 116),
{ 93: }
  ( cc: [ '0'..'9','A'..'D','F'..'Z','_','a'..'d','f'..'z' ]; s: 30),
  ( cc: [ 'E','e' ]; s: 117),
{ 94: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 30),
{ 95: }
  ( cc: [ '0'..'9','A'..'O','Q'..'Z','_','a'..'o','q'..'z' ]; s: 30),
  ( cc: [ 'P','p' ]; s: 118),
{ 96: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 30),
{ 97: }
  ( cc: [ '0'..'9','B'..'Z','_','b'..'z' ]; s: 30),
  ( cc: [ 'A','a' ]; s: 119),
{ 98: }
  ( cc: [ '0'..'9','A'..'R','T'..'Z','_','a'..'r','t'..'z' ]; s: 30),
  ( cc: [ 'S','s' ]; s: 120),
{ 99: }
  ( cc: [ '0'..'9' ]; s: 99),
  ( cc: [ 'E','e' ]; s: 58),
{ 100: }
  ( cc: [ '0'..'9' ]; s: 101),
{ 101: }
  ( cc: [ '0'..'9' ]; s: 101),
{ 102: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 30),
{ 103: }
  ( cc: [ '0'..'9','A'..'M','O'..'Z','_','a'..'m','o'..'z' ]; s: 30),
  ( cc: [ 'N','n' ]; s: 121),
{ 104: }
  ( cc: [ '0'..'9','A'..'H','J'..'Z','_','a'..'h','j'..'z' ]; s: 30),
  ( cc: [ 'I','i' ]; s: 122),
{ 105: }
  ( cc: [ '0'..'9','A'..'D','F'..'Z','_','a'..'d','f'..'z' ]; s: 30),
  ( cc: [ 'E','e' ]; s: 123),
{ 106: }
  ( cc: [ '0'..'9','A','B','D'..'Z','_','a','b','d'..'z' ]; s: 30),
  ( cc: [ 'C','c' ]; s: 124),
{ 107: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 30),
{ 108: }
  ( cc: [ '0'..'9','A'..'S','U'..'Z','_','a'..'s','u'..'z' ]; s: 30),
  ( cc: [ 'T','t' ]; s: 125),
{ 109: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 30),
{ 110: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 30),
{ 111: }
  ( cc: [ '0'..'9','A'..'N','P'..'Z','_','a'..'n','p'..'z' ]; s: 30),
  ( cc: [ 'O','o' ]; s: 126),
{ 112: }
  ( cc: [ '0'..'9','A'..'K','M'..'Z','_','a'..'k','m'..'z' ]; s: 30),
  ( cc: [ 'L','l' ]; s: 127),
{ 113: }
  ( cc: [ '0'..'9','A'..'S','U'..'Z','_','a'..'s','u'..'z' ]; s: 30),
  ( cc: [ 'T','t' ]; s: 128),
{ 114: }
  ( cc: [ '0'..'9','A'..'H','J'..'Z','_','a'..'h','j'..'z' ]; s: 30),
  ( cc: [ 'I','i' ]; s: 129),
{ 115: }
  ( cc: [ '0'..'9','A'..'D','F'..'Z','_','a'..'d','f'..'z' ]; s: 30),
  ( cc: [ 'E','e' ]; s: 130),
{ 116: }
  ( cc: [ '0'..'9','A'..'F','H'..'Z','_','a'..'f','h'..'z' ]; s: 30),
  ( cc: [ 'G','g' ]; s: 131),
{ 117: }
  ( cc: [ '0'..'9','A'..'M','O'..'Z','_','a'..'m','o'..'z' ]; s: 30),
  ( cc: [ 'N','n' ]; s: 132),
{ 118: }
  ( cc: [ '0'..'9','A'..'N','P'..'Z','_','a'..'n','p'..'z' ]; s: 30),
  ( cc: [ 'O','o' ]; s: 133),
{ 119: }
  ( cc: [ '0'..'9','A'..'J','L'..'Z','_','a'..'j','l'..'z' ]; s: 30),
  ( cc: [ 'K','k' ]; s: 134),
{ 120: }
  ( cc: [ '0'..'9','A'..'D','F'..'Z','_','a'..'d','f'..'z' ]; s: 30),
  ( cc: [ 'E','e' ]; s: 135),
{ 121: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 30),
{ 122: }
  ( cc: [ '0'..'9','A'..'M','O'..'Z','_','a'..'m','o'..'z' ]; s: 30),
  ( cc: [ 'N','n' ]; s: 136),
{ 123: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 30),
{ 124: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 30),
{ 125: }
  ( cc: [ '0'..'9','A'..'G','I'..'Z','_','a'..'g','i'..'z' ]; s: 30),
  ( cc: [ 'H','h' ]; s: 137),
{ 126: }
  ( cc: [ '0'..'9','A'..'L','N'..'Z','_','a'..'l','n'..'z' ]; s: 30),
  ( cc: [ 'M','m' ]; s: 138),
{ 127: }
  ( cc: [ '0'..'9','A'..'M','O'..'Z','_','a'..'m','o'..'z' ]; s: 30),
  ( cc: [ 'N','n' ]; s: 139),
{ 128: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 30),
{ 129: }
  ( cc: [ '0'..'9','A'..'S','U'..'Z','_','a'..'s','u'..'z' ]; s: 30),
  ( cc: [ 'T','t' ]; s: 140),
{ 130: }
  ( cc: [ '0'..'9','A'..'K','M'..'Z','_','a'..'k','m'..'z' ]; s: 30),
  ( cc: [ 'L','l' ]; s: 141),
{ 131: }
  ( cc: [ '0'..'9','A'..'M','O'..'Z','_','a'..'m','o'..'z' ]; s: 30),
  ( cc: [ 'N','n' ]; s: 142),
{ 132: }
  ( cc: [ '0'..'9','A'..'C','E'..'Z','_','a'..'c','e'..'z' ]; s: 30),
  ( cc: [ 'D','d' ]; s: 143),
{ 133: }
  ( cc: [ '0'..'9','A'..'R','T'..'Z','_','a'..'r','t'..'z' ]; s: 30),
  ( cc: [ 'S','s' ]; s: 144),
{ 134: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 30),
{ 135: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 30),
{ 136: }
  ( cc: [ '0'..'9','A'..'T','V'..'Z','_','a'..'t','v'..'z' ]; s: 30),
  ( cc: [ 'U','u' ]; s: 145),
{ 137: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 30),
{ 138: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 30),
{ 139: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 30),
{ 140: }
  ( cc: [ '0'..'9','A'..'D','F'..'Z','_','a'..'d','f'..'z' ]; s: 30),
  ( cc: [ 'E','e' ]; s: 146),
{ 141: }
  ( cc: [ '0'..'9','A'..'M','O'..'Z','_','a'..'m','o'..'z' ]; s: 30),
  ( cc: [ 'N','n' ]; s: 147),
{ 142: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 30),
{ 143: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 30),
{ 144: }
  ( cc: [ '0'..'9','A'..'D','F'..'Z','_','a'..'d','f'..'z' ]; s: 30),
  ( cc: [ 'E','e' ]; s: 148),
{ 145: }
  ( cc: [ '0'..'9','A'..'D','F'..'Z','_','a'..'d','f'..'z' ]; s: 30),
  ( cc: [ 'E','e' ]; s: 149),
{ 146: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 30),
{ 147: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 30),
{ 148: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 30),
{ 149: }
  ( cc: [ '0'..'9','A'..'Z','_','a'..'z' ]; s: 30)
);

yykl : array [0..yynstates-1] of Integer = (
{ 0: } 1,
{ 1: } 1,
{ 2: } 1,
{ 3: } 3,
{ 4: } 5,
{ 5: } 7,
{ 6: } 9,
{ 7: } 11,
{ 8: } 13,
{ 9: } 15,
{ 10: } 17,
{ 11: } 19,
{ 12: } 21,
{ 13: } 23,
{ 14: } 25,
{ 15: } 27,
{ 16: } 29,
{ 17: } 31,
{ 18: } 33,
{ 19: } 36,
{ 20: } 37,
{ 21: } 39,
{ 22: } 40,
{ 23: } 42,
{ 24: } 44,
{ 25: } 46,
{ 26: } 48,
{ 27: } 50,
{ 28: } 51,
{ 29: } 52,
{ 30: } 53,
{ 31: } 54,
{ 32: } 55,
{ 33: } 56,
{ 34: } 57,
{ 35: } 58,
{ 36: } 59,
{ 37: } 61,
{ 38: } 62,
{ 39: } 63,
{ 40: } 64,
{ 41: } 65,
{ 42: } 66,
{ 43: } 67,
{ 44: } 68,
{ 45: } 69,
{ 46: } 70,
{ 47: } 72,
{ 48: } 73,
{ 49: } 74,
{ 50: } 75,
{ 51: } 76,
{ 52: } 77,
{ 53: } 78,
{ 54: } 79,
{ 55: } 81,
{ 56: } 82,
{ 57: } 84,
{ 58: } 84,
{ 59: } 84,
{ 60: } 85,
{ 61: } 85,
{ 62: } 86,
{ 63: } 87,
{ 64: } 88,
{ 65: } 89,
{ 66: } 90,
{ 67: } 91,
{ 68: } 93,
{ 69: } 95,
{ 70: } 97,
{ 71: } 98,
{ 72: } 99,
{ 73: } 101,
{ 74: } 102,
{ 75: } 104,
{ 76: } 105,
{ 77: } 106,
{ 78: } 108,
{ 79: } 109,
{ 80: } 111,
{ 81: } 112,
{ 82: } 113,
{ 83: } 114,
{ 84: } 115,
{ 85: } 116,
{ 86: } 117,
{ 87: } 119,
{ 88: } 121,
{ 89: } 123,
{ 90: } 125,
{ 91: } 127,
{ 92: } 129,
{ 93: } 130,
{ 94: } 131,
{ 95: } 133,
{ 96: } 134,
{ 97: } 136,
{ 98: } 137,
{ 99: } 138,
{ 100: } 139,
{ 101: } 139,
{ 102: } 140,
{ 103: } 142,
{ 104: } 143,
{ 105: } 144,
{ 106: } 145,
{ 107: } 146,
{ 108: } 148,
{ 109: } 149,
{ 110: } 151,
{ 111: } 153,
{ 112: } 154,
{ 113: } 156,
{ 114: } 157,
{ 115: } 158,
{ 116: } 159,
{ 117: } 160,
{ 118: } 161,
{ 119: } 162,
{ 120: } 163,
{ 121: } 164,
{ 122: } 166,
{ 123: } 167,
{ 124: } 169,
{ 125: } 171,
{ 126: } 172,
{ 127: } 173,
{ 128: } 174,
{ 129: } 176,
{ 130: } 177,
{ 131: } 179,
{ 132: } 180,
{ 133: } 181,
{ 134: } 182,
{ 135: } 184,
{ 136: } 186,
{ 137: } 187,
{ 138: } 189,
{ 139: } 191,
{ 140: } 193,
{ 141: } 194,
{ 142: } 195,
{ 143: } 197,
{ 144: } 199,
{ 145: } 200,
{ 146: } 201,
{ 147: } 203,
{ 148: } 205,
{ 149: } 207
);

yykh : array [0..yynstates-1] of Integer = (
{ 0: } 0,
{ 1: } 0,
{ 2: } 2,
{ 3: } 4,
{ 4: } 6,
{ 5: } 8,
{ 6: } 10,
{ 7: } 12,
{ 8: } 14,
{ 9: } 16,
{ 10: } 18,
{ 11: } 20,
{ 12: } 22,
{ 13: } 24,
{ 14: } 26,
{ 15: } 28,
{ 16: } 30,
{ 17: } 32,
{ 18: } 35,
{ 19: } 36,
{ 20: } 38,
{ 21: } 39,
{ 22: } 41,
{ 23: } 43,
{ 24: } 45,
{ 25: } 47,
{ 26: } 49,
{ 27: } 50,
{ 28: } 51,
{ 29: } 52,
{ 30: } 53,
{ 31: } 54,
{ 32: } 55,
{ 33: } 56,
{ 34: } 57,
{ 35: } 58,
{ 36: } 60,
{ 37: } 61,
{ 38: } 62,
{ 39: } 63,
{ 40: } 64,
{ 41: } 65,
{ 42: } 66,
{ 43: } 67,
{ 44: } 68,
{ 45: } 69,
{ 46: } 71,
{ 47: } 72,
{ 48: } 73,
{ 49: } 74,
{ 50: } 75,
{ 51: } 76,
{ 52: } 77,
{ 53: } 78,
{ 54: } 80,
{ 55: } 81,
{ 56: } 83,
{ 57: } 83,
{ 58: } 83,
{ 59: } 84,
{ 60: } 84,
{ 61: } 85,
{ 62: } 86,
{ 63: } 87,
{ 64: } 88,
{ 65: } 89,
{ 66: } 90,
{ 67: } 92,
{ 68: } 94,
{ 69: } 96,
{ 70: } 97,
{ 71: } 98,
{ 72: } 100,
{ 73: } 101,
{ 74: } 103,
{ 75: } 104,
{ 76: } 105,
{ 77: } 107,
{ 78: } 108,
{ 79: } 110,
{ 80: } 111,
{ 81: } 112,
{ 82: } 113,
{ 83: } 114,
{ 84: } 115,
{ 85: } 116,
{ 86: } 118,
{ 87: } 120,
{ 88: } 122,
{ 89: } 124,
{ 90: } 126,
{ 91: } 128,
{ 92: } 129,
{ 93: } 130,
{ 94: } 132,
{ 95: } 133,
{ 96: } 135,
{ 97: } 136,
{ 98: } 137,
{ 99: } 138,
{ 100: } 138,
{ 101: } 139,
{ 102: } 141,
{ 103: } 142,
{ 104: } 143,
{ 105: } 144,
{ 106: } 145,
{ 107: } 147,
{ 108: } 148,
{ 109: } 150,
{ 110: } 152,
{ 111: } 153,
{ 112: } 155,
{ 113: } 156,
{ 114: } 157,
{ 115: } 158,
{ 116: } 159,
{ 117: } 160,
{ 118: } 161,
{ 119: } 162,
{ 120: } 163,
{ 121: } 165,
{ 122: } 166,
{ 123: } 168,
{ 124: } 170,
{ 125: } 171,
{ 126: } 172,
{ 127: } 173,
{ 128: } 175,
{ 129: } 176,
{ 130: } 178,
{ 131: } 179,
{ 132: } 180,
{ 133: } 181,
{ 134: } 183,
{ 135: } 185,
{ 136: } 186,
{ 137: } 188,
{ 138: } 190,
{ 139: } 192,
{ 140: } 193,
{ 141: } 194,
{ 142: } 196,
{ 143: } 198,
{ 144: } 199,
{ 145: } 200,
{ 146: } 202,
{ 147: } 204,
{ 148: } 206,
{ 149: } 208
);

yyml : array [0..yynstates-1] of Integer = (
{ 0: } 1,
{ 1: } 1,
{ 2: } 1,
{ 3: } 3,
{ 4: } 5,
{ 5: } 7,
{ 6: } 9,
{ 7: } 11,
{ 8: } 13,
{ 9: } 15,
{ 10: } 17,
{ 11: } 19,
{ 12: } 21,
{ 13: } 23,
{ 14: } 25,
{ 15: } 27,
{ 16: } 29,
{ 17: } 31,
{ 18: } 33,
{ 19: } 36,
{ 20: } 37,
{ 21: } 39,
{ 22: } 40,
{ 23: } 42,
{ 24: } 44,
{ 25: } 46,
{ 26: } 48,
{ 27: } 50,
{ 28: } 51,
{ 29: } 52,
{ 30: } 53,
{ 31: } 54,
{ 32: } 55,
{ 33: } 56,
{ 34: } 57,
{ 35: } 58,
{ 36: } 59,
{ 37: } 61,
{ 38: } 62,
{ 39: } 63,
{ 40: } 64,
{ 41: } 65,
{ 42: } 66,
{ 43: } 67,
{ 44: } 68,
{ 45: } 69,
{ 46: } 70,
{ 47: } 72,
{ 48: } 73,
{ 49: } 74,
{ 50: } 75,
{ 51: } 76,
{ 52: } 77,
{ 53: } 78,
{ 54: } 79,
{ 55: } 81,
{ 56: } 82,
{ 57: } 84,
{ 58: } 84,
{ 59: } 84,
{ 60: } 85,
{ 61: } 85,
{ 62: } 86,
{ 63: } 87,
{ 64: } 88,
{ 65: } 89,
{ 66: } 90,
{ 67: } 91,
{ 68: } 93,
{ 69: } 95,
{ 70: } 97,
{ 71: } 98,
{ 72: } 99,
{ 73: } 101,
{ 74: } 102,
{ 75: } 104,
{ 76: } 105,
{ 77: } 106,
{ 78: } 108,
{ 79: } 109,
{ 80: } 111,
{ 81: } 112,
{ 82: } 113,
{ 83: } 114,
{ 84: } 115,
{ 85: } 116,
{ 86: } 117,
{ 87: } 119,
{ 88: } 121,
{ 89: } 123,
{ 90: } 125,
{ 91: } 127,
{ 92: } 129,
{ 93: } 130,
{ 94: } 131,
{ 95: } 133,
{ 96: } 134,
{ 97: } 136,
{ 98: } 137,
{ 99: } 138,
{ 100: } 139,
{ 101: } 139,
{ 102: } 140,
{ 103: } 142,
{ 104: } 143,
{ 105: } 144,
{ 106: } 145,
{ 107: } 146,
{ 108: } 148,
{ 109: } 149,
{ 110: } 151,
{ 111: } 153,
{ 112: } 154,
{ 113: } 156,
{ 114: } 157,
{ 115: } 158,
{ 116: } 159,
{ 117: } 160,
{ 118: } 161,
{ 119: } 162,
{ 120: } 163,
{ 121: } 164,
{ 122: } 166,
{ 123: } 167,
{ 124: } 169,
{ 125: } 171,
{ 126: } 172,
{ 127: } 173,
{ 128: } 174,
{ 129: } 176,
{ 130: } 177,
{ 131: } 179,
{ 132: } 180,
{ 133: } 181,
{ 134: } 182,
{ 135: } 184,
{ 136: } 186,
{ 137: } 187,
{ 138: } 189,
{ 139: } 191,
{ 140: } 193,
{ 141: } 194,
{ 142: } 195,
{ 143: } 197,
{ 144: } 199,
{ 145: } 200,
{ 146: } 201,
{ 147: } 203,
{ 148: } 205,
{ 149: } 207
);

yymh : array [0..yynstates-1] of Integer = (
{ 0: } 0,
{ 1: } 0,
{ 2: } 2,
{ 3: } 4,
{ 4: } 6,
{ 5: } 8,
{ 6: } 10,
{ 7: } 12,
{ 8: } 14,
{ 9: } 16,
{ 10: } 18,
{ 11: } 20,
{ 12: } 22,
{ 13: } 24,
{ 14: } 26,
{ 15: } 28,
{ 16: } 30,
{ 17: } 32,
{ 18: } 35,
{ 19: } 36,
{ 20: } 38,
{ 21: } 39,
{ 22: } 41,
{ 23: } 43,
{ 24: } 45,
{ 25: } 47,
{ 26: } 49,
{ 27: } 50,
{ 28: } 51,
{ 29: } 52,
{ 30: } 53,
{ 31: } 54,
{ 32: } 55,
{ 33: } 56,
{ 34: } 57,
{ 35: } 58,
{ 36: } 60,
{ 37: } 61,
{ 38: } 62,
{ 39: } 63,
{ 40: } 64,
{ 41: } 65,
{ 42: } 66,
{ 43: } 67,
{ 44: } 68,
{ 45: } 69,
{ 46: } 71,
{ 47: } 72,
{ 48: } 73,
{ 49: } 74,
{ 50: } 75,
{ 51: } 76,
{ 52: } 77,
{ 53: } 78,
{ 54: } 80,
{ 55: } 81,
{ 56: } 83,
{ 57: } 83,
{ 58: } 83,
{ 59: } 84,
{ 60: } 84,
{ 61: } 85,
{ 62: } 86,
{ 63: } 87,
{ 64: } 88,
{ 65: } 89,
{ 66: } 90,
{ 67: } 92,
{ 68: } 94,
{ 69: } 96,
{ 70: } 97,
{ 71: } 98,
{ 72: } 100,
{ 73: } 101,
{ 74: } 103,
{ 75: } 104,
{ 76: } 105,
{ 77: } 107,
{ 78: } 108,
{ 79: } 110,
{ 80: } 111,
{ 81: } 112,
{ 82: } 113,
{ 83: } 114,
{ 84: } 115,
{ 85: } 116,
{ 86: } 118,
{ 87: } 120,
{ 88: } 122,
{ 89: } 124,
{ 90: } 126,
{ 91: } 128,
{ 92: } 129,
{ 93: } 130,
{ 94: } 132,
{ 95: } 133,
{ 96: } 135,
{ 97: } 136,
{ 98: } 137,
{ 99: } 138,
{ 100: } 138,
{ 101: } 139,
{ 102: } 141,
{ 103: } 142,
{ 104: } 143,
{ 105: } 144,
{ 106: } 145,
{ 107: } 147,
{ 108: } 148,
{ 109: } 150,
{ 110: } 152,
{ 111: } 153,
{ 112: } 155,
{ 113: } 156,
{ 114: } 157,
{ 115: } 158,
{ 116: } 159,
{ 117: } 160,
{ 118: } 161,
{ 119: } 162,
{ 120: } 163,
{ 121: } 165,
{ 122: } 166,
{ 123: } 168,
{ 124: } 170,
{ 125: } 171,
{ 126: } 172,
{ 127: } 173,
{ 128: } 175,
{ 129: } 176,
{ 130: } 178,
{ 131: } 179,
{ 132: } 180,
{ 133: } 181,
{ 134: } 183,
{ 135: } 185,
{ 136: } 186,
{ 137: } 188,
{ 138: } 190,
{ 139: } 192,
{ 140: } 193,
{ 141: } 194,
{ 142: } 196,
{ 143: } 198,
{ 144: } 199,
{ 145: } 200,
{ 146: } 202,
{ 147: } 204,
{ 148: } 206,
{ 149: } 208
);

yytl : array [0..yynstates-1] of Integer = (
{ 0: } 1,
{ 1: } 27,
{ 2: } 53,
{ 3: } 53,
{ 4: } 56,
{ 5: } 60,
{ 6: } 63,
{ 7: } 66,
{ 8: } 69,
{ 9: } 72,
{ 10: } 74,
{ 11: } 78,
{ 12: } 80,
{ 13: } 85,
{ 14: } 87,
{ 15: } 89,
{ 16: } 91,
{ 17: } 93,
{ 18: } 95,
{ 19: } 98,
{ 20: } 99,
{ 21: } 100,
{ 22: } 102,
{ 23: } 102,
{ 24: } 103,
{ 25: } 104,
{ 26: } 106,
{ 27: } 107,
{ 28: } 107,
{ 29: } 109,
{ 30: } 111,
{ 31: } 112,
{ 32: } 116,
{ 33: } 118,
{ 34: } 120,
{ 35: } 122,
{ 36: } 124,
{ 37: } 125,
{ 38: } 127,
{ 39: } 130,
{ 40: } 133,
{ 41: } 135,
{ 42: } 139,
{ 43: } 141,
{ 44: } 143,
{ 45: } 145,
{ 46: } 147,
{ 47: } 149,
{ 48: } 151,
{ 49: } 153,
{ 50: } 155,
{ 51: } 157,
{ 52: } 160,
{ 53: } 162,
{ 54: } 164,
{ 55: } 165,
{ 56: } 167,
{ 57: } 170,
{ 58: } 171,
{ 59: } 173,
{ 60: } 174,
{ 61: } 176,
{ 62: } 176,
{ 63: } 176,
{ 64: } 176,
{ 65: } 176,
{ 66: } 176,
{ 67: } 176,
{ 68: } 177,
{ 69: } 179,
{ 70: } 180,
{ 71: } 182,
{ 72: } 184,
{ 73: } 185,
{ 74: } 187,
{ 75: } 188,
{ 76: } 191,
{ 77: } 193,
{ 78: } 194,
{ 79: } 196,
{ 80: } 197,
{ 81: } 199,
{ 82: } 201,
{ 83: } 203,
{ 84: } 205,
{ 85: } 207,
{ 86: } 209,
{ 87: } 210,
{ 88: } 211,
{ 89: } 212,
{ 90: } 213,
{ 91: } 214,
{ 92: } 215,
{ 93: } 217,
{ 94: } 219,
{ 95: } 220,
{ 96: } 222,
{ 97: } 223,
{ 98: } 225,
{ 99: } 227,
{ 100: } 229,
{ 101: } 230,
{ 102: } 231,
{ 103: } 232,
{ 104: } 234,
{ 105: } 236,
{ 106: } 238,
{ 107: } 240,
{ 108: } 241,
{ 109: } 243,
{ 110: } 244,
{ 111: } 245,
{ 112: } 247,
{ 113: } 249,
{ 114: } 251,
{ 115: } 253,
{ 116: } 255,
{ 117: } 257,
{ 118: } 259,
{ 119: } 261,
{ 120: } 263,
{ 121: } 265,
{ 122: } 266,
{ 123: } 268,
{ 124: } 269,
{ 125: } 270,
{ 126: } 272,
{ 127: } 274,
{ 128: } 276,
{ 129: } 277,
{ 130: } 279,
{ 131: } 281,
{ 132: } 283,
{ 133: } 285,
{ 134: } 287,
{ 135: } 288,
{ 136: } 289,
{ 137: } 291,
{ 138: } 292,
{ 139: } 293,
{ 140: } 294,
{ 141: } 296,
{ 142: } 298,
{ 143: } 299,
{ 144: } 300,
{ 145: } 302,
{ 146: } 304,
{ 147: } 305,
{ 148: } 306,
{ 149: } 307
);

yyth : array [0..yynstates-1] of Integer = (
{ 0: } 26,
{ 1: } 52,
{ 2: } 52,
{ 3: } 55,
{ 4: } 59,
{ 5: } 62,
{ 6: } 65,
{ 7: } 68,
{ 8: } 71,
{ 9: } 73,
{ 10: } 77,
{ 11: } 79,
{ 12: } 84,
{ 13: } 86,
{ 14: } 88,
{ 15: } 90,
{ 16: } 92,
{ 17: } 94,
{ 18: } 97,
{ 19: } 98,
{ 20: } 99,
{ 21: } 101,
{ 22: } 101,
{ 23: } 102,
{ 24: } 103,
{ 25: } 105,
{ 26: } 106,
{ 27: } 106,
{ 28: } 108,
{ 29: } 110,
{ 30: } 111,
{ 31: } 115,
{ 32: } 117,
{ 33: } 119,
{ 34: } 121,
{ 35: } 123,
{ 36: } 124,
{ 37: } 126,
{ 38: } 129,
{ 39: } 132,
{ 40: } 134,
{ 41: } 138,
{ 42: } 140,
{ 43: } 142,
{ 44: } 144,
{ 45: } 146,
{ 46: } 148,
{ 47: } 150,
{ 48: } 152,
{ 49: } 154,
{ 50: } 156,
{ 51: } 159,
{ 52: } 161,
{ 53: } 163,
{ 54: } 164,
{ 55: } 166,
{ 56: } 169,
{ 57: } 170,
{ 58: } 172,
{ 59: } 173,
{ 60: } 175,
{ 61: } 175,
{ 62: } 175,
{ 63: } 175,
{ 64: } 175,
{ 65: } 175,
{ 66: } 175,
{ 67: } 176,
{ 68: } 178,
{ 69: } 179,
{ 70: } 181,
{ 71: } 183,
{ 72: } 184,
{ 73: } 186,
{ 74: } 187,
{ 75: } 190,
{ 76: } 192,
{ 77: } 193,
{ 78: } 195,
{ 79: } 196,
{ 80: } 198,
{ 81: } 200,
{ 82: } 202,
{ 83: } 204,
{ 84: } 206,
{ 85: } 208,
{ 86: } 209,
{ 87: } 210,
{ 88: } 211,
{ 89: } 212,
{ 90: } 213,
{ 91: } 214,
{ 92: } 216,
{ 93: } 218,
{ 94: } 219,
{ 95: } 221,
{ 96: } 222,
{ 97: } 224,
{ 98: } 226,
{ 99: } 228,
{ 100: } 229,
{ 101: } 230,
{ 102: } 231,
{ 103: } 233,
{ 104: } 235,
{ 105: } 237,
{ 106: } 239,
{ 107: } 240,
{ 108: } 242,
{ 109: } 243,
{ 110: } 244,
{ 111: } 246,
{ 112: } 248,
{ 113: } 250,
{ 114: } 252,
{ 115: } 254,
{ 116: } 256,
{ 117: } 258,
{ 118: } 260,
{ 119: } 262,
{ 120: } 264,
{ 121: } 265,
{ 122: } 267,
{ 123: } 268,
{ 124: } 269,
{ 125: } 271,
{ 126: } 273,
{ 127: } 275,
{ 128: } 276,
{ 129: } 278,
{ 130: } 280,
{ 131: } 282,
{ 132: } 284,
{ 133: } 286,
{ 134: } 287,
{ 135: } 288,
{ 136: } 290,
{ 137: } 291,
{ 138: } 292,
{ 139: } 293,
{ 140: } 295,
{ 141: } 297,
{ 142: } 298,
{ 143: } 299,
{ 144: } 301,
{ 145: } 303,
{ 146: } 304,
{ 147: } 305,
{ 148: } 306,
{ 149: } 307
);




var yyn : Integer;



label start, scan, action;



begin

start:

  { initialize:								}



  yynew;



scan:



  { Mark positions and matches: 					}



  for yyn := yykl[yystate] to     yykh[yystate] do yymark(yyk[yyn]);

  for yyn := yymh[yystate] downto yyml[yystate] do yymatch(yym[yyn]);



  if yytl[yystate]>yyth[yystate] then goto action;	{ dead state	}



  { Get next character:							}



  yyscan;



  { Determine action:							}



  yyn := yytl[yystate];

  while (yyn<=yyth[yystate]) and not (yyactchar in yyt[yyn].cc) do inc(yyn);

  if yyn>yyth[yystate] then goto action;

	{ No transition on yyactchar in this state.			}



  { Switch to new state:						}



  yystate := yyt[yyn].s;



  goto scan;



action:



  { Execute action: 							}



  if yyfind(yyrule) then

    begin

      yyaction(yyrule);

      if yyreject then goto action;

    end

  else if not yydefault and yywrap then

    begin

      yyclear;

      return(0);

    end;



  if not yydone then goto start;



  yylex := yyretval;

end;	{ yylex	}



